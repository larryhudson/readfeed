---
import { Debug } from "astro:components";
import { getAudioItemById } from "@src/audio-items";
import { fetchAudioForContentPart } from "@src/text-to-speech";
import pMap from "p-map";

const audioItemIdStr = Astro.params.id;
const audioItemId = parseInt(audioItemIdStr, 10);

const session = await Astro.locals.auth.validate();
const userId = session.user.userId;

const audioItem = await getAudioItemById(audioItemId);
if (audioItem.feed.userId !== userId) {
  return new Response("Unauthorized", { status: 401 });
}

const contentPartsWithoutAudio = audioItem.contentParts.filter(
  (contentPart) => contentPart.audioFileId === null,
);

await pMap(contentPartsWithoutAudio, fetchAudioForContentPart, {
  concurrency: 1,
});
---

<Debug {contentPartsWithoutAudio} />
