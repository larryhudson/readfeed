---
import { Debug } from "astro:components";
import Layout from "@src/components/Layout.astro";

import {
  getContentItemById,
  getContentPartsForContentItem,
} from "@src/content-items";

const contentItemIdStr = Astro.params.id;
const contentItemId = parseInt(contentItemIdStr, 10);

const session = await Astro.locals.auth.validate();
const userId = session.user.userId;

const contentItem = await getContentItemById(contentItemId);
if (contentItem.feed.userId !== userId) {
  return new Response("Unauthorized", { status: 401 });
}
---

<Layout>
  <h1>Content item: {contentItem.title}</h1>
  {
    contentItem.url && (
      <p>
        URL: <a href={contentItem.url}>{contentItem.url}</a>
      </p>
    )
  }

  {
    contentItem.documentFile && (
      <p>Document file: {contentItem.documentFile.title}</p>
    )
  }

  {
    contentItem.pdfExtractionJsonFilePath && (
      <p>
        <a href="tweak-pdf">Tweak PDF</a>
      </p>
    )
  }

  <p>
    <a href="./add-to-episode/">Create podcast episode with this content item</a
    >
  </p>

  <h2>Content parts</h2>
  <ul>
    {
      contentItem.contentParts.map((contentPart) => (
        <li>
          {contentPart.title}{" "}
          <a href={`/app/content-parts/${contentPart.id}/edit`}>Edit</a>
        </li>
      ))
    }

    <button
      hx-post={`/app/content-items/${contentItemId}/x-fetch-text-content`}
      hx-target="#text-content"
      hx-swap="innerHTML"
      >{contentItem.textContent ? "Refetch content" : "Fetch content"}</button
    >

    <div id="text-content">
      {contentItem.textContent && contentItem.textContent}
    </div>
    <Debug {contentItem} />
  </ul>

  <style>
    #text-content {
      white-space: pre-wrap;
    }
  </style>
</Layout>
